{"version":3,"sources":["component/card/card.component.js","component/card-list/card-list.component.js","component/search/search.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","name","email","CardList","map","id","SearchBox","placeholder","changeHandler","type","onChange","App","handleChange","e","setState","SearchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAK,SAACC,GAEnB,OACE,sBAAKC,UAAU,iBAAf,UAGA,qBAAKC,IAAI,WAAWC,IAAI,mEACxB,mCAAMH,EAAMI,SAASC,QACrB,4BAAIL,EAAMI,SAASE,YCRRC,EAAU,SAACP,GAEtB,OAEE,qBAAKC,UAAU,YAAf,SACCD,EAAMI,SAASI,KAAI,SAAAJ,GAAQ,OAC1B,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASK,UCPbC,G,MAAU,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,cAEnC,OACE,8BACA,uBACAX,UAAU,SACRY,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCoDDG,G,wDAvDb,aAAc,IAAD,8BAEX,gBAmBFC,aAAa,SAACC,GAEZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAnBrC,EAAKC,MAAM,CACTlB,SAAS,GACTe,YAAY,IANH,E,qDAYb,WAAoB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACd,SAASuB,S,oBAYvC,WAEE,MAA+BC,KAAKN,MAA5BlB,EAAR,EAAQA,SAASe,EAAjB,EAAiBA,YACXU,EAAiBzB,EAAS0B,QAC9B,SAAAC,GAAO,OAAGA,EAAQ1B,KAAK2B,cAAcC,SAASd,EAAYa,kBAM5D,OACE,sBAAK/B,UAAU,MAAf,UACA,mDACA,cAAC,EAAD,CACAU,YAAY,kBACZC,cAAegB,KAAKZ,eAEpB,cAAC,EAAD,CAAUZ,SAAUyB,W,GA9CRK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86b990a7.chunk.js","sourcesContent":["/* eslint-disable no-template-curly-in-string */\r\nimport React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card=(props)=>{\r\n \r\nreturn(\r\n  <div className='card-container'>\r\n  \r\n  \r\n  <img alt='monsters' src='https://robohash.org/{props.monsters.id}?set=set2&size=180x180'/>\r\n  <h2> {props.monsters.name}</h2>\r\n  <p>{props.monsters.email}</p>\r\n  \r\n  </div>\r\n)\r\n  \r\n} ","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList =(props)=>{\r\n\r\n  return(\r\n\r\n    <div className='card-list'>\r\n    {props.monsters.map(monsters=>(\r\n      <Card key={monsters.id} monsters={monsters}/>\r\n    ))}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './search.styles.css';\r\n\r\nexport const SearchBox=({placeholder,changeHandler})=>{\r\n\r\n  return(\r\n    <div>\r\n    <input\r\n    className='search' \r\n      type='search' \r\n      placeholder={placeholder}\r\n      onChange={changeHandler}/>\r\n    </div>\r\n  )\r\n\r\n}","import React,{Component} from 'react';\nimport { CardList } from './component/card-list/card-list.component';\nimport { SearchBox } from './component/search/search.component';\n\nimport './App.css';\n\nclass App extends Component{\n\n  constructor(){\n\n    super();\n\n    this.state={\n      monsters:[],\n      SearchField:''\n      \n    }\n\n    \n  }\n  componentDidMount(){\n   fetch('https://jsonplaceholder.typicode.com/users')\n   .then(response=>response.json())\n   .then(users=> this.setState({monsters:users}))\n\n   \n  }\n\n\n  handleChange=(e)=> {\n\n    this.setState({SearchField: e.target.value})\n\n  }\n \n  render(){\n\n    const { monsters,SearchField }=this.state;\n    const filteredMonsters=monsters.filter(\n      monster=> monster.name.toLowerCase().includes(SearchField.toLowerCase())\n    )\n    //Above is euivalent to the following\n    //const monsters=this.state.monsters;\n    //const SearchField=this.state.SearchField;\n\n    return(\n      <div className='App'>\n      <h1> Monsters Rolodex</h1>\n      <SearchBox\n      placeholder='search monsters'\n      changeHandler={this.handleChange}/>\n       \n      <CardList monsters={filteredMonsters}> \n     \n     \n      </CardList>\n      \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}